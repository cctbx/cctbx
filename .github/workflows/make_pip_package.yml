# Convert conda package to pip package
name: Convert conda to pip
on: workflow_dispatch

jobs:
  convert_conda_packages:

    strategy:
      fail-fast: false
      matrix:
        channel: [cctbx-nightly]
        os: [ubuntu-latest, macos-15, macos-13, windows-latest]
        python_version: [3.9, "3.10", 3.11, 3.12, 3.13]

    name: Converting (${{ matrix.channel }}, ${{ matrix.os }}, Python ${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: cctbx

      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: test
          miniforge-version: latest
          python-version: ${{ matrix.python_version }}

      - name: Base environment info
        run: |
          conda info
          conda list

      - name: Install cctbx
        run: |
          conda install -n test -c ${{ matrix.channel }} -y cctbx-base
          conda remove --force -n test cctbx-base

      - name: Test environment info
        run: |
          conda list -n test

      # Linux and macOS path
      - name: Create unix package (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          source ${CONDA}/etc/profile.d/conda.sh
          conda activate test

          if [[ "`uname`" == "Darwin" ]]; then
            conda install delocate
          elif
            conda install auditwheel
          done

          cd cctbx/wheel

          version=`cat ${CONDA_PREFIX}/share/cctbx/cctbx_version.txt`
          python update_version.py --version=${version}

          python convert.py --conda-package-path ${CONDA}/pkgs/cctbx-base*.conda

      - name: Build unix wheel (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          source ${CONDA}/etc/profile.d/conda.sh
          conda activate test

          cd cctbx/wheel

          pip wheel . -w ./wheels

          ls wheels

      - name: Fix unix wheel (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          source ${CONDA}/etc/profile.d/conda.sh
          conda activate test

          cd cctbx/wheel

          if [[ "`uname`" == "Darwin" ]]; then
            delocate-wheel -w fixed_wheels -v ./wheels/cctbx-base*.whl
            ls fixed_wheels
          elif
            auditwheel repair ./wheels/cctbx-base*.whl
            ls wheels
          done

      # Windows path
      - name: Create Windows package
        if: runner.os == 'Windows'
        run: |
          call %CONDA%\Scripts\activate test
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64

          cd cctbx\wheel

          set /p version= <%CONDA_PREFIX%\share\cctbx\cctbx_version.txt
          python update_version.py --version=%version%

          python convert.py --conda-package-path %CONDA%\pkgs\cctbx-base*.conda

      - name: Build Windows wheel
        if: runner.os == 'Windows'
        run: |
          call %CONDA%\Scripts\activate test
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64

          cd cctbx\wheel

          pip wheel . -w .\wheels

          dir wheels

      - name: Fix Windows wheel
        if: runner.os == 'Windows'
        run: |
          call %CONDA%\Scripts\activate test
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64

          cd cctbx\wheel

          delvewheel repair -v -w fixed_wheels .\wheels\cctbx-base*.whl

          dir fixed_wheels
