# Test current conda packages on the conda-forge and cctbx-nightly
# channels. This is for testing for any breaking changes in the
# dependencies.
#
# macos-13 will test the x86-64 packages
# macos-14 will test the Apple Silicon packages

name: Nightly conda package tests
on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *'

jobs:
  test_conda_packages:
    if: github.repository == 'cctbx/cctbx'

    strategy:
      fail-fast: false
      matrix:
        channel: [conda-forge, cctbx-nightly]
        os: [ubuntu-latest, macos-15, macos-13, windows-latest]
        python_version: [3.9, "3.10", 3.11, 3.12, 3.13]

    name: Testing (${{ matrix.channel }}, ${{ matrix.os }}, Python ${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: cctbx

      - uses: actions/checkout@v4
        with:
          repository: cctbx/cctbx_project
          path: cctbx_project

      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: test
          auto-update-conda: true
          miniforge-version: latest
          python-version: ${{ matrix.python_version }}

      - name: Base environment info
        run: |
          conda info
          conda list

      - name: Install cctbx
        run: |
          conda install -n test -c ${{ matrix.channel }} -y cctbx

      - name: Test environment info
        run: |
          conda list -n test

      # Linux and macOS path
      - name: Copy additional files for testing (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          source ${CONDA}/etc/profile.d/conda.sh
          conda activate test

          cd ${GITHUB_WORKSPACE}

          cp -a cctbx_project/ucif/antlr3 ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/ucif
          cp cctbx_project/ucif/*.cpp ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/ucif
          cp cctbx_project/ucif/examples/*.cpp ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/ucif/examples
          cp -a cctbx_project/fable/test/lenient ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/fable/test
          cp -a cctbx_project/fable/test/semantic_error ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/fable/test
          cp -a cctbx_project/fable/test/syntax_error ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/fable/test
          cp -a cctbx_project/fable/test/unsupported ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/fable/test
          cp -a cctbx_project/fable/test/valid ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages/fable/test

          libtbx.python cctbx/scripts/download-azure-artifact.py \
            --organization cctbx \
            --project cctbx_project \
            --definitions 4 \
            --artifact-name phenix_regression \
            --local-filename phenix_regression.zip
          unzip phenix_regression.zip
          mv phenix_regression ${CONDA_PREFIX}/lib/python${{ matrix.python_version }}/site-packages

      - name: Run subset of tests (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          source ${CONDA}/etc/profile.d/conda.sh
          conda activate test

          printenv

          mkdir tests
          cd tests
          export CI=""
          export PYTHONDEVMODE=1
          export PYTHONTRACEMALLOC=1
          libtbx.run_tests_parallel \
            module=annlib_adaptbx \
            module=boost_adaptbx \
            module=cctbx \
            module=cctbx_website \
            module=cma_es \
            module=fable \
            module=gltbx \
            module=iotbx \
            module=libtbx \
            module=rstbx \
            module=scitbx \
            module=smtbx \
            module=spotfinder \
            nproc=4

      # Windows path
      - name: Copy additional files for testing (Windows)
        if: runner.os == 'Windows'
        run: |
          cd $Env:GITHUB_WORKSPACE
          xcopy /Y /E /I cctbx_project\ucif\antlr3 $Env:CONDA_PREFIX\lib\site-packages\ucif\antlr3
          xcopy /Y cctbx_project\ucif\*.cpp $Env:CONDA_PREFIX\lib\site-packages\ucif\
          xcopy /Y cctbx_project\ucif\examples\*.cpp $Env:CONDA_PREFIX\lib\site-packages\ucif\examples\
          xcopy /Y /E /I cctbx_project\fable\test\lenient $Env:CONDA_PREFIX\lib\site-packages\fable\test\lenient
          xcopy /Y /E /I cctbx_project\fable\test\semantic_error $Env:CONDA_PREFIX\lib\site-packages\fable\test\semantic_error
          xcopy /Y /E /I cctbx_project\fable\test\syntax_error $Env:CONDA_PREFIX\lib\site-packages\fable\test\syntax_error
          xcopy /Y /E /I cctbx_project\fable\test\unsupported $Env:CONDA_PREFIX\lib\site-packages\fable\test\unsupported
          xcopy /Y /E /I cctbx_project\fable\test\valid $Env:CONDA_PREFIX\lib\site-packages\fable\test\valid

          xcopy /Y cctbx_project\rstbx\indexing\tst_auto_monoscan.py $Env:CONDA_PREFIX\lib\site-packages\rstbx\indexing\tst_auto_monoscan.py
          xcopy /Y cctbx_project\rstbx\indexing\tst_dataset1.py $Env:CONDA_PREFIX\lib\site-packages\rstbx\indexing\tst_dataset1.py

          libtbx.python cctbx/scripts/download-azure-artifact.py `
            --organization cctbx `
            --project cctbx_project `
            --definitions 4 `
            --artifact-name phenix_regression `
            --local-filename phenix_regression.zip
          unzip phenix_regression.zip
          mv phenix_regression $Env:CONDA_PREFIX\lib\site-packages

      - name: Run subset of tests (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call %CONDA%\Scripts\activate test
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          mkdir tests
          cd tests
          set CI=""
          call libtbx.run_tests_parallel ^
            module=annlib_adaptbx ^
            module=boost_adaptbx ^
            module=cctbx ^
            module=cctbx_website ^
            module=cma_es ^
            module=fable ^
            module=gltbx ^
            module=iotbx ^
            module=libtbx ^
            module=rstbx ^
            module=scitbx ^
            module=smtbx ^
            module=spotfinder ^
            nproc=4
